//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

struct Header {
    char padding[2] <bgcolor=0xF4A903>;
    unsigned short entries;
};

struct Band {
    unsigned short band;
    char class;
    char mimo;
};

typedef struct {
    unsigned short type <bgcolor=0xFF0000>;
    local string type_str = "";
    Band bands[6] <optimize=false>;
} Entry;

struct CACombos{
    Header header;
    Entry entries[header.entries] <optimize=false>;
} caCombos;

local int i;
local int j;
local string entryType;

for(i=0; i<caCombos.header.entries; i++){
    entryType = "DL";
    if(caCombos.entries[i].type == 202)
        entryType = "UL";

    Printf("Entry (%d) %s: \n\t", i, entryType);
    for(j=0; j<6;j++){
        if(caCombos.entries[i].bands[j].band == 0){
            break;
        }
        if(j != 0){
            Printf("-");
        }
        Printf("%d%c", caCombos.entries[i].bands[j].band,
            caCombos.entries[i].bands[j].class + 'A' - 1);
    }
    Printf("\n");
}